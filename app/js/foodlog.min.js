/*!
 * app
 * @author David Wilhelm
 * @version 0.0.1
 */
var fl = fl || {};

(function () {
  'use strict';

  fl.Day = Backbone.RelationalModel.extend({
    // url: 'js/sample-data.json',

    idAttribute: 'entry_id',

    relations: [{
      type: Backbone.HasMany,

      key: 'entries',
      
      relatedModel: 'fl.FoodItem',
      
      reverseRelation: {
        key: 'day',
        includeInJSON: 'entry_id'
      }
    }]

  });


})();
var fl = fl || {};

(function () {
  'use strict';

  // Food Item Model
  // Represents one entry in a possible list on entries on one day.

  fl.FoodItem = Backbone.RelationalModel.extend({

  });

  // TEMP METHOD - supress attempts to sync with a server.
  // Backbone.sync = function (method, model, options) {
  //   if (method === 'read') {
  //     console.log(options);
  //   }
  // };  
})();
var fl = fl || {};

(function () {
  'use strict';

  // Food List Collection
  // A collection of Food Items
  var FoodCollection = Backbone.Collection.extend({
    model: fl.FoodItem,

    url: 'js/food.json'

  });

  // Create global collection of food items.
  fl.foodCollection = new FoodCollection();
})();
var fl = fl || {};

(function () {
  'use strict';

  // Week Collection
  // A collection of Day Models
  var Week = Backbone.Collection.extend({
    model: fl.Day,

    url: 'js/sample-data.json'

  });

  // Create global collection of food items.
  fl.week = new Week();
})();
(function () {
  'use strict';

  fl.DayView = Backbone.View.extend({

    template: _.template( $('#day-template').html() ),

    initialize: function () {
      _.bindAll(this, 'render', 'renderEntry');
      // this.model.bind('reset', this.render);
      // this.model.bind('add:entries', this.renderEntry); 
    },

    renderEntry: function (entry) {
      var entryView = new fl.FoodItemView({ model: entry });
      this.$('ul.entries').append(entryView.render());
    },

    setDateString: function () {
      var d = new Date(this.model.get('date'));
      var b = d.getDate() + 1;
      d.setDate(b);
      b = new Date(d).toDateString();
      this.model.set('dateString', b);
    },

    className: function () {
      this.setDateString();
      var string = 'day';

      if (fl.date.toDateString() === this.model.get('dateString')) {
        string += ' current';
      }

      return string;
    },

    setIcon: function () {
      if (this.$el.hasClass('current')) {
        this.$('h2 i').addClass('icon-minus');
      } else {
        this.$('h2 i').addClass('icon-plus');
      }
    },

    render: function () {
      this.$el.html( this.template( this.model.toJSON() ) );
      this.model.get('entries').forEach(this.renderEntry);
      this.setIcon();
      $('#week').append(this.el);
    }
  });

})();
(function () {
  'use strict';

  fl.FoodItemView = Backbone.View.extend({

    tagName: 'li',

    id: function () {
      return this.model.cid;
    },

    template: _.template( $('#foodItem-template').html() ),

    initialize: function () {
      _.bindAll(this, 'render');
      this.listenTo(this.model, 'change', this.render);
    },

    events: {
      'dblclick label': 'edit',
      'keypress .edit': 'updateOnEnter',
      'blur .edit':   'close'
    },    

    render: function () {
      return this.$el.html( this.template( this.model.toJSON() ) );
      // $('#week').append(this.el);
      // return this;
    },

    edit: function () {

    },

    updateOnEnter: function (e) {
      e.preventDefault();

    },

    close: function () {

    }
  });

})();
(function ($) {
  'use strict';

  fl.foodLogView = Backbone.View.extend({

    initialize: function () {
      // Bind events.
      fl.date = new Date();
      this.listenTo(fl.week, 'add', this.addOne);

      // Retrieve stored data.
      fl.week.fetch();
    },

    addOne: function (day) {
      // Add one item to the day list.
      var view = new fl.DayView({
        model: day 
      });
      view.render();  
    },

    addAll: function (day) {
      // Create an html list from a whole collection.
      fl.week.each(this.addOne, this);
    }

  });
  
})(jQuery);

var fl = fl || {};
var ENTER_KEY = 13;

$(function () {
  'use strict';

  // Start the app.
  new fl.foodLogView();

});